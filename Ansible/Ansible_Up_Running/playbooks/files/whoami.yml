---
## Chapter 4 of Ansible Up and Running - Support for variables and introducing facts.
## The simplest way to define variables is to put a vars section in your playbook with the names and values of variables. 
##Ansible also allows you to put variables into one or more files, using a section called vars_files

vars:
  key_file: /etc/nginx/ssl/nginx.key
  cert_file: /etc/nginx/ssl/nginx.crt
  conf_file: /etc/nginx/sites-available/default
  server_name: localhost

## The Register clause will set the value of a variable based on the result of a task. This task captures that output for login.
- 
  command: whoami
  name: "capture output of whoami command"
  register: login

## Using the Register Clause and using DEBUG to output that information within the output.
- 
  hosts: server1
  name: "show return value of command module"
  tasks: 
    - 
      command: "id -un"
      name: "capture output of id command"
      register: login
    - 
      debug: var=login

## Here we use the Register Clause with the COMMAND module

- name: capture output of id command
  command: id -un
  register: login
- debug: msg="Logged in as user {{ login.stdout }}"

##Task using the ignore_errors clause

- name: Run myprog
  command: /opt/myprog
  register: result
  ignore_errors: True
- debug: var=result

## An example of using FACTS to find the operating system of each of our servers

- name: print out operating system
  hosts: all
  gather_facts: True
  tasks:
  - debug: var=ansible_distribution

## An example of tasks gathering ansible_facts on EC2 Servers
- name: get ec2 facts
  ec2_facts:

- debug: var=ansible_ec2_instance_id

##Using Set_Fact to simplify a variable reference. Use Set_Fact after you use the Register to make it simple to refer to a variable

- name: get snapshot id
  shell: >
    aws ec2 describe-snapshots --filters
    Name=tag:Name,Values=my-snapshot
    | jq --raw-output ".Snapshots[].SnapshotId"
  register: snap_result

- set_fact: snap={{ snap_result.stdout }}

- name: delete old snapshot
  command: aws ec2 delete-snapshot --snapshot-id "{{ snap }}"